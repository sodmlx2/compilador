program.        program               ::= "program" [identifier] ";" [block];
block.          block                 ::= [label] [uses] [var] [type] [const] "begin" [cmd] "end.";
label.		label                 ::= "digit" "{" "digit" "}";
uses.           uses                  ::= [identifier] "{" ","[identifier] "}" ";";
variable.       variable              ::= [identifier] "=" [type] ";";
type.           type		      ::= type_specifier ;
tint.           type_specifier        ::= "int" ;
tfloat.         type_specifier        ::= "float" ;
tdouble.        type_specifier        ::= "double" ;
const.          constant              ::= number ";";
cmdlist.        cmdlist               ::= [cmd] "{" [cmd] "};";
cmd.            cmd_assign            ::= cmd_type;
cmd_goto.	cmd_type	      ::= "goto" [label];
cmd_assign.     cmd_type              ::= "assign" [variable] "=" [exprecion];
cmd_while.      cmd_type              ::= "while" [exprecion] "do" [cmdlist];
cmd_for.        cmd_type              ::= "for" [exprecion] [cmdlist];
cmd_if.         cmd_type              ::= "if" [exprecion] "then" [cmdlist] "[" "else" [cmdlist] "]";
cmd_output.     cmd_type              ::= "output" [exprecion];
exp.		exprecion	      ::= exp_term ;
expeq.		exp_term	      ::= term "==" term;
expenq.		exp_term	      ::= term "<>" term;
expmaior.	exp_term	      ::= term ">" term;
expmenor.       exp_term	      ::= term "<" term;
expmaioreq.	exp_term	      ::= term ">=" term;
expmenoreq.	exp_term	      ::= term "<=" term;
termo.          term                  ::= term_type;
termvar.        term_type	      ::= [variable];
termconst.	term_type	      ::= [constant];
termexp.	term_type	      ::= [exprecion]; 
